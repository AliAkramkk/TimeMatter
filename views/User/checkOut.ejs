<%- include('./partials/header.ejs') %>
<!-- Header Section Begin -->
 
<header class="header">

  <div class="container">
      <div class="row">
          <div class="col-lg-3">
              <div class="header__logo">
                  <a class="navbar-brand text-dark fs-4 fw-bold" href="#">Time<span class="text-danger">Matter</span></a>
              </div>
          </div>
          <div class="col-lg-6">
              <nav class="header__menu">
                  <ul>
                      <li class="active"><a href="/">Home</a></li>
                      <li><a href="/shop">Shop</a></li>
                      <li><a href="#">About</a></li>
                      <li><a href="#">Contact</a></li>
                  </ul>
              </nav>
          </div>
          <div class="col-lg-3">
              <div class="header__cart">
                 

                  <div class="header__top__right__auth">

                    
                      
                      
<!-- 
        <div class="header__top__right__auth">
                          <a onclick="login()"><i class="fa fa-user"></i> Login</a>
                      </div> -->

                      

                     
                    <ul><% if(wishlist!=null && wishlist.items.length!=0){%>
                        <li><a href="/wishlist"><i class="fa fa-heart"></i> <span><%= wishlist.items.length%></span></a></li> <%}else{%>
                            <li><a href="/wishlist"><i class="fa fa-heart"></i> <span>0</span></a></li><%}%>
                        <li><a href="/cart"><i class="fa fa-shopping-bag"></i> <span><%=carts.length%></span></a></li> 
                    </ul>


                      <div class="header__top__right__auth">
                          <a href="/profile"><i class="fa fa-user"></i><%= user.username %></a>
                      </div>

        <div class="header__top__right__auth">
                          <a href="/logout" style="box-shadow: none;border: none;" class="btn btn-sm btn-outline-danger">Logout</a>
                      </div>
                      
                   
                  </div>

              </div>
          </div>
      </div>

      </div>
      <div class="humberger__open">
          <i class="fa fa-bars"></i>
      </div>
  </div>
</header>

<!-- Header Section End -->

<div class="checkout-main mt-4">
  <div class="container">
    <form class="row form" id="checkout-form" >
      <input type="hidden" value="<%= total %>" name="totalAmount" />
      
      
        <!-- <h3 class="mt-5 d-flex justify-content-between">
          <div>Choose Address</div>
          <a href="/addAddress?redirect=checkOut" class="btn btn-dark rounded-0"
            >Add Address</a
          >
        </h3> -->
       <!-- ... Your checkout form ... -->

       <div class="col-12 col-md-7 mt-5">
        <div class="card shadow-0 border mb-4 m-4 ">
            <div class="card-body">
        <h5 class="mt-3 d-flex justify-content-between align-items-center">
          <div style="color: black;">Choose Address</div>
          <a href="/add-Address?redirect=checkOut" class="custom-button">Add Address</a>
        </h5><br>
       
                <div class="row">
                    <div class="col-md-12">
                        <div class="card shadow-0 ">
                            <div class="card-body">
                        <% user.address.forEach(item => { %>
                            <label class="address-box mt-3 position-relative" for="">
                                <div class="address-detail">
                                    <b><%= item.username %></b>
                                    <br>
                                    <b><%= item.mobile %> </b>
                                    <br>
                                    <b><%= item.address %> </b>
                                    <b>PIN: <%= item.pincode %> </b>
                                    <b>id: <%= item.id %> </b>
                               
                                <div class="address-radio">
                                    <input type="radio" value="<%= item.id %>,<%= item.username %>,<%= item.address %>,<%= item.pincode %>" name="address" id="" required>
                                </div>
                                <div class="man-ad-top-right">
                                    <a href="/edit-address/<%=item.id%>?redirect=checkOut"><i class="ri-edit-box-line text-dark"></i></a>
                                    <i class="ri-delete-bin-5-fill text-dark" onclick="deleteAddress('<%= item.id %>')"></i>
                                </div>
                            </div>
                            </label>
                       
                        <% }) %>
                    </div>
                </div>
                           

                    </div>
                </div>
            </div>
        </div>
        
       </div>

       
<div class="col-12 col-md-5 mt-4">
    <div class="card shadow-0 border mb-2 m-4 mt-5">
        <div class="card-body ">

<h3 class="mt-3">Payment Info</h3>

<div class="checkout-payment mt-3">

    <b>Use Wallet</b>
    <div class="pay-option mt-4 mb-4">
        <label for="wallet" class="checkout-wallet">
            <div class="cw-label">
                <i class="ri-wallet-2-line me-2"></i>
                <b>Wallet</b> 
            </div>
            <div class="cw-cash">
                <b>
                    ₹
                    <span id="walletAmount"><%=  parseFloat(user.wallet).toFixed(2) %></span>
                </b>
                <input type="checkbox" id="wallet" name="wallet"  value=true>
            </div>
        </label>
        <div class="mt-3">
            <span class="me-2">Amount Payable</span>
            <b>
                ₹<span id="totalAmount">
                    <%= parseFloat(updatedPrice).toFixed(2) %>
                </span>
            </b>
        </div>
    </div>
    <b>Payment Method</b><br>
    
        <!-- <div class="cw-label">
            <i class="ri-wallet-2-line me-2"></i>
            <b>Wallet</b>
        </div>
        <div class="cw-cash">
            <b>
                ₹
                <span id="walletAmount"style="color: green;">
                   <%= parseFloat(user.wallet).toFixed(2) %>
                </span> -->
            <!-- </b><br>
            <input type="radio" id="wallet" name="payment" value="wallet" required>
            <label for="cod">Wallet</label>
        </div> -->
    
    <div class="pay-option mt-4">
        <input type="radio" id="cod" name="payment" value="cod" required>
        <label for="cod">Cash on Delivery</label>
    </div>
    <div class="pay-option mt-2">
        <input type="radio" id="online" name="payment" value="online" required>
        <label for="online">Online Payment</label>
    </div>

    <div class="pay-option mt-4">
<input id="updatedPrice" type="hidden" name="updatedPrice" value="<%= updatedPrice %>">
<input id="discountPrice" type="hidden" name="discountPrice" value="<%= discountPrice %>">
<input id="couponName" type="hidden"  name="couponName"  value="<%= couponName %>">
<input id="productPrice" type="hidden" name="productPrice" value="<%= productPrice %>">

<button type="submit" class="custom-button">Place Order</button>




    </div>

</div>




</div>
    </div>    
</form>

</div>
</div>




<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>


                const formEl = document.querySelector('.form');
                const url = window.location.origin;
                formEl.addEventListener('submit', click => {
                    event.preventDefault();
                    const formData = new FormData(formEl);
                    const data = Object.fromEntries(formData);
                    const orderTotalAmount = document.getElementById('totalAmount').innerText;
                    data.totalAmount = orderTotalAmount;
                    
                    fetch(`${url}/checkout`, {
                        method: 'POST',
                        headers: {
                            "Content-Type": "application/json",
                            'Accept': 'application/json',
                        },
                        body: JSON.stringify(data),
                    }).then((response) => {
                        if (response.status === 400) {
                            return response.json().then((data) => {
                                errorMessage.innerHTML =
                                    `<div class="alert alert-warning alert-dismissible fade show" role="alert">
                        <strong>${data.message}</strong>
                    </div>`;

                                setTimeout(() => {
                                    errorMessage.innerHTML = `<div></div>`;
                                }, 5000);
                            });
                        } else {
                            return response.json().then((res) => {
                                if (res.msg) {
                                    Swal.fire({
                                        title: 'Success',
                                        text: "Order successfully placed",
                                        icon: 'success',
                                        showConfirmButton: false,
                                    });
                                    setTimeout(() => {
                                        Swal.close(); // Close the alert
                                        window.location.href = `${url}`;
                                    }, 1500);
                                    // Redirect to home page with a success message as a URL parameter
                                }

                                let orderData = res;
                                var options = {
                                    key: 'rzp_test_eVbAVqjcDB8erp',
                                    amount: orderData.amount,
                                    currency: "INR",
                                    name: "Time Matter",
                                    description: "Test Transaction",
                                    image: "image/time-matter.png",
                                    order_id: orderData.options.id,
                                    handler: function (response) {
                                        storeOrderData(response, orderData.options, orderData.userDetails, orderData.address);
                                    },
                                    prefill: {
                                        name: orderData.userDetails.name,
                                        email: orderData.userDetails.email,
                                        contact: orderData.userDetails.number
                                    },
                                    theme: {
                                        color: "#dd2222"
                                    }
                                };
                                var rzp1 = new Razorpay(options);
                                rzp1.open();
                            });
                        }
                    });
                });

                function storeOrderData(payment, order, userId, address) {
                    const url = window.location.origin;
                    const couponName = document.getElementById('couponName').value;
                    const productPrice = document.getElementById('productPrice').value;
                    
                    console.log(url);
                    fetch(`${url}/verifyOnlinePayment?couponName=${couponName}&&productPrice=${productPrice}`, {
                        method: 'PUT',
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            payment,
                            order,
                            userId,
                            address,
                        })
                    }).then((response) => {
                        if (response.ok) {
                            return response.json();
                        }
                        throw new Error('Network response was not ok');
                    }).then((res) => {

                        Swal.fire({
                            title: 'Success',
                            text: "Order successfully placed",
                            icon: 'success',
                            showConfirmButton: false,
                        })
                        setTimeout(() => {
                            Swal.close(); // Close the alert
                            window.location.href = `${url}`;
                        }, 1500);
                        // Redirect to home page with success message as a URL parameter

                    })
                }
        //   delete address
        function deleteAddress(id) {
    if (confirm("Are you sure you want to delete this address?")) {
        window.location.href = "/delete-address/" + id + "?redirect=checkOut";
    }
}

    
</script>
<%- include('./partials/footer.ejs') %>